local Players = game:GetService("Players")
local player = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Create the GUI
local gui = Instance.new("ScreenGui")
gui.Name = "ClimbEventGUI"
gui.Parent = player:WaitForChild("PlayerGui")

-- Main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 120)
frame.Position = UDim2.new(0.5, -100, 1, -130) -- Bottom center
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Parent = gui

-- Add rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

-- Title
local title = Instance.new("TextLabel")
title.Text = "Climb Event Controller"
title.Size = UDim2.new(1, 0, 0, 25)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.SourceSansBold
title.Parent = frame

-- Delay input
local delayLabel = Instance.new("TextLabel")
delayLabel.Text = "Delay (seconds):"
delayLabel.Size = UDim2.new(0.9, 0, 0, 20)
delayLabel.Position = UDim2.new(0.05, 0, 0.25, 0)
delayLabel.BackgroundTransparency = 1
delayLabel.TextColor3 = Color3.new(1, 1, 1)
delayLabel.TextXAlignment = Enum.TextXAlignment.Left
delayLabel.Parent = frame

local delayInput = Instance.new("TextBox")
delayInput.PlaceholderText = "0.1"
delayInput.Text = "0.1"
delayInput.Size = UDim2.new(0.9, 0, 0, 25)
delayInput.Position = UDim2.new(0.05, 0, 0.45, 0)
delayInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
delayInput.TextColor3 = Color3.new(1, 1, 1)
delayInput.Parent = frame

-- Toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Text = "START"
toggleButton.Size = UDim2.new(0.9, 0, 0, 30)
toggleButton.Position = UDim2.new(0.05, 0, 0.75, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Parent = frame

-- Add rounded corners to input and button
local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 4)
inputCorner.Parent = delayInput

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 4)
buttonCorner.Parent = toggleButton

-- Remote setup
local args = {
    10,
    0.05972291701960958
}

local remotePath = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_knit@1.5.1"):WaitForChild("knit"):WaitForChild("Services"):WaitForChild("ClimbService"):WaitForChild("RE"):WaitForChild("ClimbEndEvent")
local remoteEvent = remotePath

-- Loop control
local running = false
local currentDelay = 0.1

-- Input validation
local function validateInput()
    local text = delayInput.Text
    local number = tonumber(text)
    
    if number and number > 0 then
        currentDelay = number
        return true
    else
        delayInput.Text = tostring(currentDelay)
        return false
    end
end

delayInput.FocusLost:Connect(function()
    validateInput()
end)

-- Toggle functionality
toggleButton.MouseButton1Click:Connect(function()
    if validateInput() then
        running = not running
        if running then
            toggleButton.Text = "STOP"
            toggleButton.BackgroundColor3 = Color3.fromRGB(120, 50, 50)
            
            -- Start firing loop
            while running do
                remoteEvent:FireServer(unpack(args))
                task.wait(currentDelay)
            end
        else
            toggleButton.Text = "START"
            toggleButton.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
        end
    end
end)
